defmodule <%= @web_module %>.Components.Card do
  @moduledoc false
  use <%= @web_module %>, :component

  @doc """
  Displays a card with header, content, and footer.

  ## Installation

      mix widgex.add card
  """

  attr :class, :string, default: nil
  attr :rest, :global

  slot :inner_block, required: true

  def card(assigns) do
    ~H"""
    <div class={classes(["rounded-lg border bg-card text-card-foreground shadow-sm", @class])} {@rest}>
      <%%= render_slot(@inner_block) %>
    </div>
    """
  end

  attr :class, :string, default: nil
  attr :rest, :global

  slot :inner_block, required: true

  def card_header(assigns) do
    ~H"""
    <div class={classes(["flex flex-col space-y-1.5 p-6", @class])} {@rest}>
      <%%= render_slot(@inner_block) %>
    </div>
    """
  end

  attr :class, :string, default: nil
  attr :rest, :global

  slot :inner_block, required: true

  def card_title(assigns) do
    ~H"""
    <h3 class={classes(["text-2xl font-semibold leading-none tracking-tight", @class])} {@rest}>
      <%%= render_slot(@inner_block) %>
    </h3>
    """
  end

  attr :class, :string, default: nil
  attr :rest, :global

  slot :inner_block, required: true

  def card_description(assigns) do
    ~H"""
    <p class={classes(["text-sm text-muted-foreground", @class])} {@rest}>
      <%%= render_slot(@inner_block) %>
    </p>
    """
  end

  attr :class, :string, default: nil
  attr :rest, :global

  slot :inner_block, required: true

  def card_content(assigns) do
    ~H"""
    <div class={classes(["p-6 pt-0", @class])} {@rest}>
      <%%= render_slot(@inner_block) %>
    </div>
    """
  end

  attr :class, :string, default: nil
  attr :rest, :global

  slot :inner_block, required: true

  def card_footer(assigns) do
    ~H"""
    <p class={classes(["flex items-center p-6 pt-0", @class])} {@rest}>
      <%%= render_slot(@inner_block) %>
    </p>
    """
  end
end
